<?php

/**
 * Implements hook_permission().
 */
function back_to_parent_permission() {
  return array(
    'administer btp' => array(
      'title' => t('Administer Back to Parent'),
      'description' => t('Administer the general settings for Back to Parent links'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function back_to_parent_menu() {
  $items['admin/config/user-interface/back-to-parent'] = array(
    'title' => t('Back to Parent'),
    'description' => t('Configure the "Back to Parent" link blocks and settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('back_to_parent_settings'),
    'access arguments' => array('administer btp'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'back_to_parent.admin.inc',
    'file path' => drupal_get_path('module', 'back_to_parent'),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function back_to_parent_theme() {
  return array(
    'back_to_parent_block' => array(
      'variables' => array(
        'back_to_parent_link' => NULL,
      ),
      'template' => 'templates/back_to_parent_block',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function back_to_parent_block_info() {
  global $language;
  $lang = ($language->language == 'en') ? '' : '_' . $language->language;

  $max_to_display = variable_get('number_of_back_to_parent_blocks' . $lang, 1);
  $blocks = array();
  for($i = 1; $i <= $max_to_display; $i++) {
    $blocks['back_to_parent_link_' . $i] = array(
      'info' => t('Back to Parent Link - ' . $i),
      'cache' => DRUPAL_CACHE_GLOBAL,
    );
  }

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function back_to_parent_block_view($delta = '') {
  global $language;
  $lang = ($language->language == 'en') ? '' : '_' . $language->language;

  $max_to_display = variable_get('number_of_back_to_parent_blocks' . $lang, 1);
  $block = array();
  for($i = 1; $i <= $max_to_display; $i++) {
    switch ($delta) {
      case 'back_to_parent_link_' . $i:
        $prefix = variable_get('btp_block' . $i . '_prefix' . $lang);
        $prefix = (!empty($prefix)) ? $prefix . ' ' : '';
        $suffix = variable_get('btp_block' . $i . '_suffix' . $lang);
        $suffix = (!empty($suffix)) ? ' ' . $suffix : '';

        $plid_item = back_to_parent_item();
        if (!empty($plid_item)) {
          $parent_link = l($prefix . $plid_item['title'] . $suffix, $plid_item['href'], array('attributes' => array('class' => 'back-to-link')));
          $block['subject'] = '';
          $block['content'] = array(
            '#theme' => 'back_to_parent_block',
            '#back_to_parent_link' => $parent_link,
          );
        } else {
          $parent_link = NULL;
          $block['subject'] = NULL;
          $block['content'] = NULL;
        }
      break;
    }
  }

  return $block;
}

/**
 * Implements hook_block_view().
 */
function back_to_parent_block_configure($delta = '') {
  global $language;
  $lang = ($language->language == 'en') ? '' : '_' . $language->language;

  $max_to_display = variable_get('number_of_back_to_parent_blocks' . $lang, 1);
  $form = array();
  for($i = 1; $i <= $max_to_display; $i++) {
    switch ($delta) {
      case 'back_to_parent_link_' . $i:
        $form['btp_block' . $i . '_prefix' . $lang] = array(
          '#type' => 'text',
          '#title' => t('Link Prefix'),
          '#default_value' => variable_get('btp_block' . $i . '_prefix' . $lang, 'Back to'),
        );
        $form['btp_block' . $i . '_suffix' . $lang] = array(
          '#type' => 'text',
          '#title' => t('Link Prefix'),
          '#default_value' => variable_get('btp_block' . $i . '_suffix' . $lang, ''),
        );
      break;
    }
  }

  return $form;
}

/**
 * Implements hook_block_view().
 */
function back_to_parent_block_save($delta = '', $edit = array()) {
  global $language;
  $lang = ($language->language == 'en') ? '' : '_' . $language->language;

  $max_to_display = variable_get('number_of_back_to_parent_blocks' . $lang, 1);
  for($i = 1; $i <= $max_to_display; $i++) {
    switch ($delta) {
      case 'back_to_parent_link_' . $i:
        variable_get('btp_block' . $i . '_prefix' . $lang, $edit['btp_block' . $i . '_prefix' . $lang]);
        variable_get('btp_block' . $i . '_suffix' . $lang, $edit['btp_block' . $i . '_suffix' . $lang]);
      break;
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function back_to_parent_preprocess_page(&$vars) {
  $plid_item = back_to_parent_item();
  if (!empty($plid_item)) {
    $attributes = array('attributes' => array('class' => array('back-to-parent', 'link'),),);
    $back_to_parent_link = l($parent_link_item['link_title'], $parent_link_item['link_path'], $attributes);
    $vars['back_to_parent_link'] = $back_to_parent_link;
  }
}

/**
 * Return an array of the current pages closest parent link.
 */
function back_to_parent_item() {
  $trail = menu_get_active_trail();
  $current_menu_item = array_pop($trail);
  $plid = (!empty($current_menu_item)) ? $current_menu_item['plid'] : NULL;
  $plid_item = ($plid != 0) ? menu_link_load($plid): FALSE;
  return $plid_item;

}
